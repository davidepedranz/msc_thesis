# ------------------------------------------------------------------------
#  Variables [time is measured in milliseconds]
# ------------------------------------------------------------------------

# time unit conversions
SECONDS								1000
MINUTES								SECONDS * 60
HOURS								MINUTES * 60
DAYS								HOURS * 24

# simulation parameters
SEED 0
NETWORK_SIZE						1000
END_TIME							1 * HOURS
LOG_STEP							END_TIME / 100

NETWORK_MIN_DELAY					50
NETWORK_MAX_DELAY					300
NETWORK_DROP						0.025

# simulate users of the public ledger that submit transactions to the system
TRANSACTIONS_POISSON_MEAN			MINUTES / 20

# Bitcoin specific parameters, see references
BITCOIN_INITIAL_PEERS				25
BITCOIN_MAX_PEER_CONNECTIONS		125
BITCOIN_FEELER_SLEEP_WINDOW			1 * SECONDS
BITCOIN_FEELER_INTERVAL				2 * MINUTES
BITCOIN_BLOCK_POISSON_MEAN			10 * MINUTES
BITCOIN_BLOCK_SIZE					20
BITCOIN_PING_INTERVAL				2 * MINUTES
BITCOIN_PONG_TIMEOUT				20 * MINUTES

# ------------------------------------------------------------------------
#  Configuration
# ------------------------------------------------------------------------

# simulation specific
random.seed							SEED
network.size						NETWORK_SIZE
simulation.endtime					END_TIME
simulation.logtime					LOG


include.init						wire transactions start_topology start_bitcoin

init.wire							peersim.dynamics.WireKOut
init.wire.protocol					topology
init.wire.k							BITCOIN_INITIAL_PEERS

init.transactions 					simulator.initializers.TransactionsInitializer
init.transactions.protocol			bitcoin
init.transactions.mean				TRANSACTIONS_POISSON_MEAN

init.start_topology					simulator.initializers.ProtocolInitializer
init.start_topology.protocol		topology

init.start_bitcoin					simulator.initializers.ProtocolInitializer
init.start_bitcoin.protocol			bitcoin


control.forks						simulator.observers.BlockchainObserver
control.forks.protocol				bitcoin
control.forks.step					LOG_STEP

control.topology					simulator.observers.ControlMessagesObserver
control.topology.protocol			topology
control.topology.step				LOG_STEP


# TODO: for the moment we assume the network to be perfect (no delay, reliable)
protocol.t1							peersim.transport.UniformRandomTransport
protocol.t1.mindelay				NETWORK_MIN_DELAY
protocol.t1.maxdelay				NETWORK_MAX_DELAY

protocol.t2							peersim.transport.UnreliableTransport
protocol.t2.drop					NETWORK_DROP
protocol.t2.transport				t1git

protocol.topology					simulator.protocols.bitcoin.topology.BitcoinTopology
protocol.topology.transport			t2
protocol.topology.step 				BITCOIN_PING_INTERVAL
protocol.topology.max_peers			BITCOIN_MAX_PEER_CONNECTIONS
protocol.topology.feeler_sleep		BITCOIN_FEELER_SLEEP_WINDOW
protocol.topology.feeler_interval	BITCOIN_FEELER_SLEEP_WINDOW
protocol.topology.pong_timeout		BITCOIN_PONG_TIMEOUT

protocol.bitcoin					simulator.protocols.bitcoin.transactions.BitcoinProtocol
protocol.bitcoin.linkable			topology
protocol.bitcoin.transport			t2
protocol.bitcoin.mean				BITCOIN_BLOCK_POISSON_MEAN
protocol.bitcoin.block_size 		BITCOIN_BLOCK_SIZE
