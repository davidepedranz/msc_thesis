# ------------------------------------------------------------------------
#  Variables
# ------------------------------------------------------------------------

SEED 0

END_TIME 1000
LOG_STEP END_TIME / 100

NETWORK_SIZE 10000

TRANSACTIONS_POISSON_MEAN 5
BLOCK_POISSON_MEAN 20
BLOCK_SIZE 20


# ------------------------------------------------------------------------
#  Configuration
# ------------------------------------------------------------------------

random.seed						SEED
simulation.endtime				END_TIME
simulation.logtime				LOG
network.size					NETWORK_SIZE


include.init					transactions start

init.transactions 				simulator.initializers.TransactionsInitializer
init.transactions.protocol		bitcoin
init.transactions.mean			TRANSACTIONS_POISSON_MEAN

init.start						simulator.initializers.ProtocolInitializer
init.start.protocol				bitcoin


control.forks					simulator.observers.ForksObserver
control.forks.protocol			bitcoin
control.forks.step				LOG_STEP

control.cpu						simulator.observers.CPUObserver
control.cpu.protocol			bitcoin
control.cpu.step				LOG_STEP


protocol.bitcoin				simulator.protocols.BitcoinProtocol
protocol.bitcoin.linkable		lnk
protocol.bitcoin.transport		urt
protocol.bitcoin.mean			BLOCK_POISSON_MEAN
protocol.bitcoin.block_size 	BLOCK_SIZE

# TODO: for the moment we assume the network to be perfect (no delay, reliable)
protocol.urt					peersim.transport.UniformRandomTransport
protocol.urt.mindelay			0
protocol.urt.maxdelay			0

# TODO: for the moment we have a fully connected network
protocol.lnk					peersim.core.OracleIdleProtocol
